DROP TABLE IF EXISTS Bookings;
DROP TABLE IF EXISTS Comments;
DROP TABLE IF EXISTS Items;
DROP TABLE IF EXISTS ITEM_REQUESTS;
DROP TABLE IF EXISTS USERS;


CREATE TABLE IF NOT EXISTS Users
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name  VARCHAR(100) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS Item_requests
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    description  VARCHAR(300)                NOT NULL,
    requester_id BIGINT                      NOT NULL,
    created_time TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    FOREIGN KEY (requester_id) REFERENCES Users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Items
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        VARCHAR(100) NOT NULL,
    description VARCHAR(300) NOT NULL,
    available   BOOLEAN      NOT NULL,
    owner_id    BIGINT       NOT NULL,
    request_id  BIGINT       NULL,
    FOREIGN KEY (owner_id) REFERENCES Users (id) ON DELETE CASCADE,
    FOREIGN KEY (request_id) REFERENCES Item_requests (id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS Bookings
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    end_time   TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    item_id    BIGINT                      NOT NULL,
    booker_id  BIGINT                      NOT NULL,
    status     VARCHAR(20)                 NOT NULL CHECK (status IN ('WAITING', 'APPROVED', 'REJECTED', 'CANCELED')),
    FOREIGN KEY (item_id) REFERENCES Items (id) ON DELETE CASCADE,
    FOREIGN KEY (booker_id) REFERENCES Users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Comments
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text      VARCHAR NOT NULL,
    item_id   BIGINT  NOT NULL,
    author_id BIGINT  NOT NULL,
    created   TIMESTAMP WITHOUT TIME ZONE,
    FOREIGN KEY (item_id) REFERENCES Items (id) ON DELETE CASCADE,
    FOREIGN KEY (author_id) REFERENCES Users (id) ON DELETE CASCADE
);
